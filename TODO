C Helper Tokens
---------------

comma_va_args - the comma that comes before the optional elipsis.
trailing_comma - optional trailing comma before an rbrace
declarator_hint - 
function_definition_hint
defined_separator
typedef_identifier - parsed like an identifier, but is a typedef name.
endif - for ending if,elif,else blocks.

cAST
------------

-1)  Implement
	a.  Pragma
	b.  Error
	c.  Warning
	d.  Line
	e.  FuncCall

0)  Consolidate TokenStream and TokenList

1) Improve logging
	- Log the processing of each AST node
	- Mention any #includes that are being processed

2) Run on git source code
	- Should be able to preprocess properly
	- Should generate AST

3) Run on linux source code
	- Should be able to preprocess properly
	- Should generate AST

3) Finalize human/machine readable tokens
	- token file format (.tokens)

4) Remove cast/Ast.py

5) use `gcc -dM -E - < /dev/null` to get initial preprocessor directives

hermes
-------------

1) Add processing hooks
	- eval_funcs

2) Improve public API
	- parsetree foo_parse(tokens)
	- ast foo_ast(parsetree)
	- void * foo_eval(ast, eval_funcs)

3) 'parse' subcommand needs to read from stdin
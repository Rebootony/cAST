(PPFile:
  nodes=[
    (Define:
      body=(ReplacementList:
        tokens=[
          LPAREN,
          BITAND,
          IDENTIFIER,
          LSQUARE,
          PP_NUMBER,
          RSQUARE,
          RPAREN
        ]
      ),
      ident=IDENTIFIER
    ),
    (IfSection:
      elif=[],
      else=(Else:
        nodes=[
          CSOURCE
        ]
      ),
      if=(IfDef:
        nodes=[
          CSOURCE
        ],
        ident=IDENTIFIER
      )
    ),
    CSOURCE,
    (DefineFunction:
      body=(ReplacementList:
        tokens=[
          IDENTIFIER,
          ADD,
          IDENTIFIER
        ]
      ),
      ident=IDENTIFIER,
      params=[
        IDENTIFIER,
        IDENTIFIER
      ]
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          PP_NUMBER
        ]
      ),
      ident=IDENTIFIER
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          PP_NUMBER
        ]
      ),
      ident=IDENTIFIER
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          STRING_LITERAL
        ]
      ),
      ident=IDENTIFIER
    ),
    (DefineFunction:
      body=(ReplacementList:
        tokens=[
          IDENTIFIER,
          SUB,
          IDENTIFIER
        ]
      ),
      ident=IDENTIFIER,
      params=[
        IDENTIFIER,
        IDENTIFIER
      ]
    ),
    CSOURCE,
    (Define:
      body=(ReplacementList:
        tokens=[
          IDENTIFIER,
          LPAREN,
          PP_NUMBER,
          COMMA,
          IDENTIFIER,
          RPAREN,
          ADD,
          IDENTIFIER
        ]
      ),
      ident=IDENTIFIER
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          IDENTIFIER,
          LPAREN,
          PP_NUMBER,
          COMMA,
          PP_NUMBER,
          RPAREN
        ]
      ),
      ident=IDENTIFIER
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          PP_NUMBER,
          ADD,
          IDENTIFIER,
          LPAREN,
          PP_NUMBER,
          COMMA,
          PP_NUMBER,
          RPAREN
        ]
      ),
      ident=IDENTIFIER
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          STRING_LITERAL
        ]
      ),
      ident=IDENTIFIER
    ),
    CSOURCE,
    (IfSection:
      elif=[],
      else=None,
      if=(If:
        expr=(Equals:
          right=PP_NUMBER,
          left=IDENTIFIER
        ),
        nodes=[
          CSOURCE
        ]
      )
    ),
    CSOURCE,
    (Define:
      body=(ReplacementList:
        tokens=[
          PP_NUMBER
        ]
      ),
      ident=IDENTIFIER
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          PP_NUMBER
        ]
      ),
      ident=IDENTIFIER
    ),
    (IfSection:
      elif=[
        (ElseIf:
          expr=PP_NUMBER,
          nodes=None
        ),
        (ElseIf:
          expr=(Sub:
            right=PP_NUMBER,
            left=PP_NUMBER
          ),
          nodes=[
            CSOURCE
          ]
        ),
        (ElseIf:
          expr=(Sub:
            right=PP_NUMBER,
            left=PP_NUMBER
          ),
          nodes=[
            CSOURCE
          ]
        )
      ],
      else=None,
      if=(IfDef:
        nodes=[
          (IfSection:
            elif=[],
            else=None,
            if=(IfNDef:
              nodes=[
                CSOURCE
              ],
              ident=IDENTIFIER
            )
          )
        ],
        ident=IDENTIFIER
      )
    ),
    CSOURCE,
    (Undef:
      ident=IDENTIFIER
    ),
    CSOURCE,
    (Undef:
      ident=IDENTIFIER
    ),
    CSOURCE
  ]
)
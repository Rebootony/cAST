<external_declaration_hint () [test/cases/8/source.c line 3, col 1]>
<int (int) [test/cases/8/source.c line 3, col 1]>
<function_prototype_hint () [test/cases/8/source.c line 3, col 1]>
<identifier (f) [test/cases/8/source.c line 3, col 5]>
<lparen (() [test/cases/8/source.c line 3, col 6]>
<abstract_parameter_hint () [test/cases/8/source.c line 3, col 7]>
<void (void) [test/cases/8/source.c line 3, col 7]>
<rparen ()) [test/cases/8/source.c line 3, col 11]>
<comma (,) [test/cases/8/source.c line 3, col 12]>
<function_prototype_hint () [test/cases/8/source.c line 3, col 14]>
<asterisk (*) [test/cases/8/source.c line 3, col 14]>
<identifier (fip) [test/cases/8/source.c line 3, col 15]>
<lparen (() [test/cases/8/source.c line 3, col 18]>
<rparen ()) [test/cases/8/source.c line 3, col 19]>
<comma (,) [test/cases/8/source.c line 3, col 20]>
<declarator_hint () [test/cases/8/source.c line 3, col 22]>
<lparen (() [test/cases/8/source.c line 3, col 22]>
<asterisk (*) [test/cases/8/source.c line 3, col 23]>
<identifier (pfi) [test/cases/8/source.c line 3, col 24]>
<rparen ()) [test/cases/8/source.c line 3, col 27]>
<lparen (() [test/cases/8/source.c line 3, col 28]>
<rparen ()) [test/cases/8/source.c line 3, col 29]>
<semi (;) [test/cases/8/source.c line 3, col 30]>
<external_declaration_hint () [test/cases/8/source.c line 10, col 1]>
<int (int) [test/cases/8/source.c line 10, col 1]>
<declarator_hint () [test/cases/8/source.c line 10, col 1]>
<lparen (() [test/cases/8/source.c line 10, col 5]>
<asterisk (*) [test/cases/8/source.c line 10, col 6]>
<identifier (apfi) [test/cases/8/source.c line 10, col 7]>
<lsquare ([) [test/cases/8/source.c line 10, col 11]>
<integer_constant (3) [test/cases/8/source.c line 10, col 12]>
<rsquare (]) [test/cases/8/source.c line 10, col 13]>
<rparen ()) [test/cases/8/source.c line 10, col 14]>
<lparen (() [test/cases/8/source.c line 10, col 15]>
<named_parameter_hint () [test/cases/8/source.c line 10, col 16]>
<int (int) [test/cases/8/source.c line 10, col 16]>
<asterisk (*) [test/cases/8/source.c line 10, col 20]>
<identifier (x) [test/cases/8/source.c line 10, col 21]>
<comma (,) [test/cases/8/source.c line 10, col 22]>
<named_parameter_hint () [test/cases/8/source.c line 10, col 24]>
<int (int) [test/cases/8/source.c line 10, col 24]>
<asterisk (*) [test/cases/8/source.c line 10, col 28]>
<identifier (y) [test/cases/8/source.c line 10, col 29]>
<rparen ()) [test/cases/8/source.c line 10, col 30]>
<semi (;) [test/cases/8/source.c line 10, col 31]>
<external_declaration_hint () [test/cases/8/source.c line 23, col 1]>
<int (int) [test/cases/8/source.c line 23, col 1]>
<function_prototype_hint () [test/cases/8/source.c line 23, col 1]>
<lparen (() [test/cases/8/source.c line 23, col 5]>
<asterisk (*) [test/cases/8/source.c line 23, col 6]>
<identifier (fpfi) [test/cases/8/source.c line 23, col 7]>
<lparen (() [test/cases/8/source.c line 23, col 11]>
<abstract_parameter_hint () [test/cases/8/source.c line 23, col 12]>
<int (int) [test/cases/8/source.c line 23, col 12]>
<lparen (() [test/cases/8/source.c line 23, col 16]>
<asterisk (*) [test/cases/8/source.c line 23, col 17]>
<rparen ()) [test/cases/8/source.c line 23, col 18]>
<lparen (() [test/cases/8/source.c line 23, col 19]>
<abstract_parameter_hint () [test/cases/8/source.c line 23, col 20]>
<long (long) [test/cases/8/source.c line 23, col 20]>
<rparen ()) [test/cases/8/source.c line 23, col 24]>
<comma (,) [test/cases/8/source.c line 23, col 25]>
<abstract_parameter_hint () [test/cases/8/source.c line 23, col 27]>
<int (int) [test/cases/8/source.c line 23, col 27]>
<rparen ()) [test/cases/8/source.c line 23, col 30]>
<rparen ()) [test/cases/8/source.c line 23, col 31]>
<lparen (() [test/cases/8/source.c line 23, col 32]>
<abstract_parameter_hint () [test/cases/8/source.c line 23, col 33]>
<int (int) [test/cases/8/source.c line 23, col 33]>
<comma_va_args (,) [test/cases/8/source.c line 23, col 36]>
<elipsis (...) [test/cases/8/source.c line 23, col 38]>
<rparen ()) [test/cases/8/source.c line 23, col 41]>
<semi (;) [test/cases/8/source.c line 23, col 42]>
<external_declaration_hint () [test/cases/8/source.c line 25, col 1]>
<int (int) [test/cases/8/source.c line 25, col 1]>
<function_definition_hint () [test/cases/8/source.c line 25, col 1]>
<identifier (main) [test/cases/8/source.c line 25, col 5]>
<lparen (() [test/cases/8/source.c line 25, col 9]>
<rparen ()) [test/cases/8/source.c line 25, col 10]>
<lbrace ({) [test/cases/8/source.c line 25, col 12]>
<char (char) [test/cases/8/source.c line 25, col 14]>
<identifier (str) [test/cases/8/source.c line 25, col 19]>
<lsquare ([) [test/cases/8/source.c line 25, col 22]>
<rsquare (]) [test/cases/8/source.c line 25, col 23]>
<assign (=) [test/cases/8/source.c line 25, col 24]>
<lbrace ({) [test/cases/8/source.c line 25, col 25]>
<character_constant ('a') [test/cases/8/source.c line 25, col 26]>
<comma (,) [test/cases/8/source.c line 25, col 29]>
<character_constant ('b') [test/cases/8/source.c line 25, col 30]>
<comma (,) [test/cases/8/source.c line 25, col 33]>
<character_constant ('c') [test/cases/8/source.c line 25, col 34]>
<trailing_comma (,) [test/cases/8/source.c line 25, col 37]>
<rbrace (}) [test/cases/8/source.c line 25, col 38]>
<semi (;) [test/cases/8/source.c line 25, col 39]>
<return (return) [test/cases/8/source.c line 25, col 41]>
<integer_constant (0) [test/cases/8/source.c line 25, col 48]>
<semi (;) [test/cases/8/source.c line 25, col 49]>
<rbrace (}) [test/cases/8/source.c line 25, col 51]>

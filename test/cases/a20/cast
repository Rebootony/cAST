(TranslationUnit:
  external_declarations=[
    (ExternalDeclaration:
      declarations=(FunctionDefinition:
        body=[
          (Declaration:
            init_declarators=[
              (InitDeclarator:
                initializer=<integer_constant (10) [test/cases/20/source.c line 2, col 15]>,
                declarator=(Declarator:
                  direct_declarator=<identifier (myvar) [test/cases/20/source.c line 2, col 7]>,
                  pointer=None
                )
              ),
              (InitDeclarator:
                initializer=None,
                declarator=(Declarator:
                  direct_declarator=<identifier (k) [test/cases/20/source.c line 2, col 19]>,
                  pointer=None
                )
              ),
              (InitDeclarator:
                initializer=None,
                declarator=(Declarator:
                  direct_declarator=<identifier (p) [test/cases/20/source.c line 2, col 22]>,
                  pointer=None
                )
              )
            ],
            declaration_specifiers=[
              <int (int) [test/cases/20/source.c line 2, col 3]>
            ]
          ),
          (Switch:
            expr=<identifier (myvar) [test/cases/20/source.c line 3, col 11]>,
            statment=[
              (Case:
                expr=<integer_constant (10) [test/cases/20/source.c line 4, col 10]>,
                statement=(Assign:
                  var=<identifier (k) [test/cases/20/source.c line 5, col 7]>,
                  value=<integer_constant (10) [test/cases/20/source.c line 5, col 11]>
                )
              ),
              (Assign:
                var=<identifier (p) [test/cases/20/source.c line 6, col 7]>,
                value=(Add:
                  right=<integer_constant (1) [test/cases/20/source.c line 6, col 15]>,
                  left=<identifier (k) [test/cases/20/source.c line 6, col 11]>
                )
              ),
              (Return:
                expr=<integer_constant (10) [test/cases/20/source.c line 7, col 14]>
              ),
              (Case:
                expr=<integer_constant (20) [test/cases/20/source.c line 8, col 10]>,
                statement=(Case:
                  expr=<integer_constant (30) [test/cases/20/source.c line 9, col 10]>,
                  statement=(Return:
                    expr=<integer_constant (20) [test/cases/20/source.c line 10, col 14]>
                  )
                )
              ),
              (DefaultCase:
                statement=<break (break) [test/cases/20/source.c line 12, col 5]>
              )
            ]
          )
        ],
        declaration_list=None,
        signature=(Declarator:
          direct_declarator=(FunctionSignature:
            params=None,
            declarator=<identifier (main) [test/cases/20/source.c line 1, col 5]>
          ),
          pointer=None
        )
      ),
      declaration_specifiers=[
        <int (int) [test/cases/20/source.c line 1, col 1]>
      ]
    )
  ]
)

[c:75] external_declaration_hint () [test/cases/13/source.c line 6, col 1]
[c:13] int (int) [test/cases/13/source.c line 6, col 1]
[c:42] function_definition_hint () [test/cases/13/source.c line 6, col 1]
[c:115] identifier (main) [test/cases/13/source.c line 6, col 5]
[c:47] lparen (() [test/cases/13/source.c line 6, col 9]
[c:48] rparen ()) [test/cases/13/source.c line 6, col 10]
[c:59] lbrace ({) [test/cases/13/source.c line 7, col 1]
[c:13] int (int) [test/cases/13/source.c line 8, col 3]
[c:115] identifier (x) [test/cases/13/source.c line 8, col 7]
[c:20] semi (;) [test/cases/13/source.c line 8, col 8]
[c:45] if (if) [test/cases/13/source.c line 10, col 3]
[c:47] lparen (() [test/cases/13/source.c line 10, col 6]
[c:49] integer_constant (1) [test/cases/13/source.c line 10, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 10, col 11]
[c:115] identifier (printf) [test/cases/13/source.c line 10, col 13]
[c:47] lparen (() [test/cases/13/source.c line 10, col 13]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 10, col 13]
[c:48] rparen ()) [test/cases/13/source.c line 10, col 13]
[c:20] semi (;) [test/cases/13/source.c line 10, col 17]
[c:50] endif () [test/cases/13/source.c line 10, col 17]
[c:45] if (if) [test/cases/13/source.c line 11, col 3]
[c:47] lparen (() [test/cases/13/source.c line 11, col 6]
[c:49] integer_constant (1) [test/cases/13/source.c line 11, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 11, col 11]
[c:59] lbrace ({) [test/cases/13/source.c line 11, col 13]
[c:115] identifier (printf) [test/cases/13/source.c line 11, col 14]
[c:47] lparen (() [test/cases/13/source.c line 11, col 14]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 11, col 14]
[c:48] rparen ()) [test/cases/13/source.c line 11, col 14]
[c:20] semi (;) [test/cases/13/source.c line 11, col 18]
[c:89] rbrace (}) [test/cases/13/source.c line 11, col 19]
[c:50] endif () [test/cases/13/source.c line 11, col 19]
[c:45] if (if) [test/cases/13/source.c line 12, col 3]
[c:47] lparen (() [test/cases/13/source.c line 12, col 6]
[c:49] integer_constant (0) [test/cases/13/source.c line 12, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 12, col 12]
[c:115] identifier (printf) [test/cases/13/source.c line 12, col 14]
[c:47] lparen (() [test/cases/13/source.c line 12, col 14]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 12, col 14]
[c:48] rparen ()) [test/cases/13/source.c line 12, col 14]
[c:20] semi (;) [test/cases/13/source.c line 12, col 18]
[c:50] endif () [test/cases/13/source.c line 12, col 18]
[c:116] else (else) [test/cases/13/source.c line 12, col 20]
[c:115] identifier (printf) [test/cases/13/source.c line 12, col 25]
[c:47] lparen (() [test/cases/13/source.c line 12, col 25]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 12, col 25]
[c:48] rparen ()) [test/cases/13/source.c line 12, col 25]
[c:20] semi (;) [test/cases/13/source.c line 12, col 29]
[c:50] endif () [test/cases/13/source.c line 12, col 29]
[c:45] if (if) [test/cases/13/source.c line 13, col 3]
[c:47] lparen (() [test/cases/13/source.c line 13, col 6]
[c:49] integer_constant (0) [test/cases/13/source.c line 13, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 13, col 12]
[c:59] lbrace ({) [test/cases/13/source.c line 13, col 14]
[c:115] identifier (printf) [test/cases/13/source.c line 13, col 15]
[c:47] lparen (() [test/cases/13/source.c line 13, col 15]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 13, col 15]
[c:48] rparen ()) [test/cases/13/source.c line 13, col 15]
[c:20] semi (;) [test/cases/13/source.c line 13, col 19]
[c:89] rbrace (}) [test/cases/13/source.c line 13, col 20]
[c:50] endif () [test/cases/13/source.c line 13, col 20]
[c:116] else (else) [test/cases/13/source.c line 13, col 22]
[c:115] identifier (printf) [test/cases/13/source.c line 13, col 27]
[c:47] lparen (() [test/cases/13/source.c line 13, col 27]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 13, col 27]
[c:48] rparen ()) [test/cases/13/source.c line 13, col 27]
[c:20] semi (;) [test/cases/13/source.c line 13, col 31]
[c:50] endif () [test/cases/13/source.c line 13, col 31]
[c:45] if (if) [test/cases/13/source.c line 14, col 3]
[c:47] lparen (() [test/cases/13/source.c line 14, col 6]
[c:49] integer_constant (0) [test/cases/13/source.c line 14, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 14, col 12]
[c:59] lbrace ({) [test/cases/13/source.c line 14, col 14]
[c:115] identifier (printf) [test/cases/13/source.c line 14, col 15]
[c:47] lparen (() [test/cases/13/source.c line 14, col 15]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 14, col 15]
[c:48] rparen ()) [test/cases/13/source.c line 14, col 15]
[c:20] semi (;) [test/cases/13/source.c line 14, col 19]
[c:89] rbrace (}) [test/cases/13/source.c line 14, col 20]
[c:50] endif () [test/cases/13/source.c line 14, col 20]
[c:116] else (else) [test/cases/13/source.c line 14, col 22]
[c:59] lbrace ({) [test/cases/13/source.c line 14, col 27]
[c:115] identifier (printf) [test/cases/13/source.c line 14, col 28]
[c:47] lparen (() [test/cases/13/source.c line 14, col 28]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 14, col 28]
[c:48] rparen ()) [test/cases/13/source.c line 14, col 28]
[c:20] semi (;) [test/cases/13/source.c line 14, col 32]
[c:89] rbrace (}) [test/cases/13/source.c line 14, col 33]
[c:50] endif () [test/cases/13/source.c line 14, col 33]
[c:45] if (if) [test/cases/13/source.c line 15, col 3]
[c:47] lparen (() [test/cases/13/source.c line 15, col 6]
[c:49] integer_constant (1) [test/cases/13/source.c line 15, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 15, col 11]
[c:24] for (for) [test/cases/13/source.c line 15, col 13]
[c:47] lparen (() [test/cases/13/source.c line 15, col 16]
[c:115] identifier (x) [test/cases/13/source.c line 15, col 17]
[c:91] assign (=) [test/cases/13/source.c line 15, col 18]
[c:49] integer_constant (0) [test/cases/13/source.c line 15, col 19]
[c:20] semi (;) [test/cases/13/source.c line 15, col 20]
[c:115] identifier (x) [test/cases/13/source.c line 15, col 21]
[c:112] lt (<) [test/cases/13/source.c line 15, col 22]
[c:49] integer_constant (1) [test/cases/13/source.c line 15, col 23]
[c:20] semi (;) [test/cases/13/source.c line 15, col 24]
[c:115] identifier (x) [test/cases/13/source.c line 15, col 25]
[c:80] incr (++) [test/cases/13/source.c line 15, col 26]
[c:48] rparen ()) [test/cases/13/source.c line 15, col 28]
[c:59] lbrace ({) [test/cases/13/source.c line 15, col 29]
[c:115] identifier (printf) [test/cases/13/source.c line 15, col 30]
[c:47] lparen (() [test/cases/13/source.c line 15, col 30]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 15, col 30]
[c:48] rparen ()) [test/cases/13/source.c line 15, col 30]
[c:20] semi (;) [test/cases/13/source.c line 15, col 34]
[c:89] rbrace (}) [test/cases/13/source.c line 15, col 35]
[c:50] endif () [test/cases/13/source.c line 15, col 35]
[c:45] if (if) [test/cases/13/source.c line 16, col 3]
[c:47] lparen (() [test/cases/13/source.c line 16, col 6]
[c:49] integer_constant (0) [test/cases/13/source.c line 16, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 16, col 12]
[c:24] for (for) [test/cases/13/source.c line 16, col 14]
[c:47] lparen (() [test/cases/13/source.c line 16, col 17]
[c:115] identifier (x) [test/cases/13/source.c line 16, col 18]
[c:91] assign (=) [test/cases/13/source.c line 16, col 19]
[c:49] integer_constant (0) [test/cases/13/source.c line 16, col 20]
[c:20] semi (;) [test/cases/13/source.c line 16, col 21]
[c:115] identifier (x) [test/cases/13/source.c line 16, col 22]
[c:112] lt (<) [test/cases/13/source.c line 16, col 23]
[c:49] integer_constant (1) [test/cases/13/source.c line 16, col 24]
[c:20] semi (;) [test/cases/13/source.c line 16, col 25]
[c:115] identifier (x) [test/cases/13/source.c line 16, col 26]
[c:80] incr (++) [test/cases/13/source.c line 16, col 27]
[c:48] rparen ()) [test/cases/13/source.c line 16, col 29]
[c:115] identifier (printf) [test/cases/13/source.c line 16, col 30]
[c:47] lparen (() [test/cases/13/source.c line 16, col 30]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 16, col 30]
[c:48] rparen ()) [test/cases/13/source.c line 16, col 30]
[c:20] semi (;) [test/cases/13/source.c line 16, col 34]
[c:50] endif () [test/cases/13/source.c line 16, col 34]
[c:116] else (else) [test/cases/13/source.c line 16, col 36]
[c:24] for (for) [test/cases/13/source.c line 16, col 41]
[c:47] lparen (() [test/cases/13/source.c line 16, col 44]
[c:115] identifier (x) [test/cases/13/source.c line 16, col 45]
[c:91] assign (=) [test/cases/13/source.c line 16, col 46]
[c:49] integer_constant (0) [test/cases/13/source.c line 16, col 47]
[c:20] semi (;) [test/cases/13/source.c line 16, col 48]
[c:115] identifier (x) [test/cases/13/source.c line 16, col 49]
[c:112] lt (<) [test/cases/13/source.c line 16, col 50]
[c:49] integer_constant (1) [test/cases/13/source.c line 16, col 51]
[c:20] semi (;) [test/cases/13/source.c line 16, col 52]
[c:115] identifier (x) [test/cases/13/source.c line 16, col 53]
[c:80] incr (++) [test/cases/13/source.c line 16, col 54]
[c:48] rparen ()) [test/cases/13/source.c line 16, col 56]
[c:115] identifier (printf) [test/cases/13/source.c line 16, col 57]
[c:47] lparen (() [test/cases/13/source.c line 16, col 57]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 16, col 57]
[c:48] rparen ()) [test/cases/13/source.c line 16, col 57]
[c:20] semi (;) [test/cases/13/source.c line 16, col 61]
[c:50] endif () [test/cases/13/source.c line 16, col 61]
[c:45] if (if) [test/cases/13/source.c line 17, col 3]
[c:47] lparen (() [test/cases/13/source.c line 17, col 6]
[c:49] integer_constant (0) [test/cases/13/source.c line 17, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 17, col 12]
[c:59] lbrace ({) [test/cases/13/source.c line 17, col 14]
[c:24] for (for) [test/cases/13/source.c line 17, col 15]
[c:47] lparen (() [test/cases/13/source.c line 17, col 18]
[c:115] identifier (x) [test/cases/13/source.c line 17, col 19]
[c:91] assign (=) [test/cases/13/source.c line 17, col 20]
[c:49] integer_constant (0) [test/cases/13/source.c line 17, col 21]
[c:20] semi (;) [test/cases/13/source.c line 17, col 22]
[c:115] identifier (x) [test/cases/13/source.c line 17, col 23]
[c:112] lt (<) [test/cases/13/source.c line 17, col 24]
[c:49] integer_constant (1) [test/cases/13/source.c line 17, col 25]
[c:20] semi (;) [test/cases/13/source.c line 17, col 26]
[c:115] identifier (x) [test/cases/13/source.c line 17, col 27]
[c:80] incr (++) [test/cases/13/source.c line 17, col 28]
[c:48] rparen ()) [test/cases/13/source.c line 17, col 30]
[c:59] lbrace ({) [test/cases/13/source.c line 17, col 31]
[c:115] identifier (printf) [test/cases/13/source.c line 17, col 32]
[c:47] lparen (() [test/cases/13/source.c line 17, col 32]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 17, col 32]
[c:48] rparen ()) [test/cases/13/source.c line 17, col 32]
[c:20] semi (;) [test/cases/13/source.c line 17, col 36]
[c:89] rbrace (}) [test/cases/13/source.c line 17, col 37]
[c:89] rbrace (}) [test/cases/13/source.c line 17, col 38]
[c:50] endif () [test/cases/13/source.c line 17, col 38]
[c:116] else (else) [test/cases/13/source.c line 17, col 40]
[c:59] lbrace ({) [test/cases/13/source.c line 17, col 45]
[c:24] for (for) [test/cases/13/source.c line 17, col 46]
[c:47] lparen (() [test/cases/13/source.c line 17, col 49]
[c:115] identifier (x) [test/cases/13/source.c line 17, col 50]
[c:91] assign (=) [test/cases/13/source.c line 17, col 51]
[c:49] integer_constant (0) [test/cases/13/source.c line 17, col 52]
[c:20] semi (;) [test/cases/13/source.c line 17, col 53]
[c:115] identifier (x) [test/cases/13/source.c line 17, col 54]
[c:112] lt (<) [test/cases/13/source.c line 17, col 55]
[c:49] integer_constant (1) [test/cases/13/source.c line 17, col 56]
[c:20] semi (;) [test/cases/13/source.c line 17, col 57]
[c:115] identifier (x) [test/cases/13/source.c line 17, col 58]
[c:80] incr (++) [test/cases/13/source.c line 17, col 59]
[c:48] rparen ()) [test/cases/13/source.c line 17, col 61]
[c:59] lbrace ({) [test/cases/13/source.c line 17, col 62]
[c:115] identifier (printf) [test/cases/13/source.c line 17, col 63]
[c:47] lparen (() [test/cases/13/source.c line 17, col 63]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 17, col 63]
[c:48] rparen ()) [test/cases/13/source.c line 17, col 63]
[c:20] semi (;) [test/cases/13/source.c line 17, col 67]
[c:89] rbrace (}) [test/cases/13/source.c line 17, col 68]
[c:89] rbrace (}) [test/cases/13/source.c line 17, col 69]
[c:50] endif () [test/cases/13/source.c line 17, col 69]
[c:45] if (if) [test/cases/13/source.c line 18, col 3]
[c:47] lparen (() [test/cases/13/source.c line 18, col 6]
[c:49] integer_constant (0) [test/cases/13/source.c line 18, col 7]
[c:48] rparen ()) [test/cases/13/source.c line 18, col 12]
[c:24] for (for) [test/cases/13/source.c line 18, col 14]
[c:47] lparen (() [test/cases/13/source.c line 18, col 17]
[c:115] identifier (x) [test/cases/13/source.c line 18, col 18]
[c:91] assign (=) [test/cases/13/source.c line 18, col 19]
[c:49] integer_constant (0) [test/cases/13/source.c line 18, col 20]
[c:20] semi (;) [test/cases/13/source.c line 18, col 21]
[c:115] identifier (x) [test/cases/13/source.c line 18, col 22]
[c:112] lt (<) [test/cases/13/source.c line 18, col 23]
[c:49] integer_constant (1) [test/cases/13/source.c line 18, col 24]
[c:20] semi (;) [test/cases/13/source.c line 18, col 25]
[c:115] identifier (x) [test/cases/13/source.c line 18, col 26]
[c:80] incr (++) [test/cases/13/source.c line 18, col 27]
[c:48] rparen ()) [test/cases/13/source.c line 18, col 29]
[c:59] lbrace ({) [test/cases/13/source.c line 18, col 30]
[c:115] identifier (printf) [test/cases/13/source.c line 18, col 31]
[c:47] lparen (() [test/cases/13/source.c line 18, col 31]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 18, col 31]
[c:48] rparen ()) [test/cases/13/source.c line 18, col 31]
[c:20] semi (;) [test/cases/13/source.c line 18, col 35]
[c:89] rbrace (}) [test/cases/13/source.c line 18, col 36]
[c:50] endif () [test/cases/13/source.c line 18, col 36]
[c:116] else (else) [test/cases/13/source.c line 18, col 38]
[c:24] for (for) [test/cases/13/source.c line 18, col 43]
[c:47] lparen (() [test/cases/13/source.c line 18, col 46]
[c:115] identifier (x) [test/cases/13/source.c line 18, col 47]
[c:91] assign (=) [test/cases/13/source.c line 18, col 48]
[c:49] integer_constant (0) [test/cases/13/source.c line 18, col 49]
[c:20] semi (;) [test/cases/13/source.c line 18, col 50]
[c:115] identifier (x) [test/cases/13/source.c line 18, col 51]
[c:112] lt (<) [test/cases/13/source.c line 18, col 52]
[c:49] integer_constant (1) [test/cases/13/source.c line 18, col 53]
[c:20] semi (;) [test/cases/13/source.c line 18, col 54]
[c:115] identifier (x) [test/cases/13/source.c line 18, col 55]
[c:80] incr (++) [test/cases/13/source.c line 18, col 56]
[c:48] rparen ()) [test/cases/13/source.c line 18, col 58]
[c:59] lbrace ({) [test/cases/13/source.c line 18, col 59]
[c:115] identifier (printf) [test/cases/13/source.c line 18, col 60]
[c:47] lparen (() [test/cases/13/source.c line 18, col 60]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 18, col 60]
[c:48] rparen ()) [test/cases/13/source.c line 18, col 60]
[c:20] semi (;) [test/cases/13/source.c line 18, col 64]
[c:89] rbrace (}) [test/cases/13/source.c line 18, col 65]
[c:50] endif () [test/cases/13/source.c line 18, col 65]
[c:45] if (if) [test/cases/13/source.c line 19, col 3]
[c:47] lparen (() [test/cases/13/source.c line 19, col 5]
[c:49] integer_constant (0) [test/cases/13/source.c line 19, col 6]
[c:48] rparen ()) [test/cases/13/source.c line 19, col 11]
[c:115] identifier (printf) [test/cases/13/source.c line 19, col 12]
[c:47] lparen (() [test/cases/13/source.c line 19, col 12]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 19, col 12]
[c:48] rparen ()) [test/cases/13/source.c line 19, col 12]
[c:20] semi (;) [test/cases/13/source.c line 19, col 16]
[c:50] endif () [test/cases/13/source.c line 19, col 16]
[c:11] else_if (else if) [test/cases/13/source.c line 19, col 17]
[c:47] lparen (() [test/cases/13/source.c line 19, col 24]
[c:49] integer_constant (1) [test/cases/13/source.c line 19, col 25]
[c:48] rparen ()) [test/cases/13/source.c line 19, col 29]
[c:115] identifier (printf) [test/cases/13/source.c line 19, col 30]
[c:47] lparen (() [test/cases/13/source.c line 19, col 30]
[c:82] string_literal ("pass\n") [test/cases/13/source.c line 19, col 30]
[c:48] rparen ()) [test/cases/13/source.c line 19, col 30]
[c:20] semi (;) [test/cases/13/source.c line 19, col 34]
[c:50] endif () [test/cases/13/source.c line 19, col 34]
[c:116] else (else) [test/cases/13/source.c line 19, col 35]
[c:115] identifier (printf) [test/cases/13/source.c line 19, col 40]
[c:47] lparen (() [test/cases/13/source.c line 19, col 40]
[c:82] string_literal ("fail\n") [test/cases/13/source.c line 19, col 40]
[c:48] rparen ()) [test/cases/13/source.c line 19, col 40]
[c:20] semi (;) [test/cases/13/source.c line 19, col 44]
[c:50] endif () [test/cases/13/source.c line 19, col 44]
[c:89] rbrace (}) [test/cases/13/source.c line 20, col 1]

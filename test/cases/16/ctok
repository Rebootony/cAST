<external_declaration_hint () [test/cases/16/source.c line 1, col 1]>
<typedef (typedef) [test/cases/16/source.c line 1, col 1]>
<int (int) [test/cases/16/source.c line 1, col 9]>
<declarator_hint () [test/cases/16/source.c line 1, col 1]>
<identifier (myint) [test/cases/16/source.c line 1, col 13]>
<semi (;) [test/cases/16/source.c line 1, col 18]>
<external_declaration_hint () [test/cases/16/source.c line 2, col 1]>
<typedef (typedef) [test/cases/16/source.c line 2, col 1]>
<struct (struct) [test/cases/16/source.c line 2, col 9]>
<identifier (a) [test/cases/16/source.c line 2, col 16]>
<lbrace ({) [test/cases/16/source.c line 2, col 18]>
<int (int) [test/cases/16/source.c line 2, col 19]>
<identifier (a) [test/cases/16/source.c line 2, col 23]>
<semi (;) [test/cases/16/source.c line 2, col 24]>
<typedef_identifier (myint) [test/cases/16/source.c line 2, col 26]>
<identifier (b) [test/cases/16/source.c line 2, col 32]>
<semi (;) [test/cases/16/source.c line 2, col 33]>
<rbrace (}) [test/cases/16/source.c line 2, col 34]>
<declarator_hint () [test/cases/16/source.c line 2, col 1]>
<identifier (mystruct) [test/cases/16/source.c line 2, col 36]>
<semi (;) [test/cases/16/source.c line 2, col 44]>
<external_declaration_hint () [test/cases/16/source.c line 4, col 1]>
<int (int) [test/cases/16/source.c line 4, col 1]>
<function_definition_hint () [test/cases/16/source.c line 4, col 1]>
<identifier (main) [test/cases/16/source.c line 4, col 5]>
<lparen (() [test/cases/16/source.c line 4, col 9]>
<rparen ()) [test/cases/16/source.c line 4, col 10]>
<lbrace ({) [test/cases/16/source.c line 5, col 1]>
<typedef (typedef) [test/cases/16/source.c line 6, col 3]>
<int (int) [test/cases/16/source.c line 6, col 11]>
<identifier (myint_) [test/cases/16/source.c line 6, col 15]>
<semi (;) [test/cases/16/source.c line 6, col 21]>
<typedef_identifier (myint) [test/cases/16/source.c line 7, col 3]>
<identifier (x) [test/cases/16/source.c line 7, col 9]>
<assign (=) [test/cases/16/source.c line 7, col 11]>
<integer_constant (10) [test/cases/16/source.c line 7, col 13]>
<semi (;) [test/cases/16/source.c line 7, col 15]>
<typedef_identifier (myint_) [test/cases/16/source.c line 8, col 3]>
<identifier (z) [test/cases/16/source.c line 8, col 10]>
<assign (=) [test/cases/16/source.c line 8, col 12]>
<integer_constant (2) [test/cases/16/source.c line 8, col 14]>
<semi (;) [test/cases/16/source.c line 8, col 15]>
<typedef_identifier (mystruct) [test/cases/16/source.c line 9, col 3]>
<identifier (y) [test/cases/16/source.c line 9, col 12]>
<semi (;) [test/cases/16/source.c line 9, col 13]>
<identifier (y) [test/cases/16/source.c line 10, col 3]>
<dot (.) [test/cases/16/source.c line 10, col 4]>
<identifier (b) [test/cases/16/source.c line 10, col 5]>
<assign (=) [test/cases/16/source.c line 10, col 7]>
<integer_constant (15) [test/cases/16/source.c line 10, col 9]>
<semi (;) [test/cases/16/source.c line 10, col 11]>
<identifier (printf) [test/cases/16/source.c line 11, col 3]>
<lparen (() [test/cases/16/source.c line 11, col 9]>
<string_literal ("%d %d %d\...) [test/cases/16/source.c line 11, col 10]>
<comma (,) [test/cases/16/source.c line 11, col 22]>
<identifier (z) [test/cases/16/source.c line 11, col 24]>
<comma (,) [test/cases/16/source.c line 11, col 25]>
<identifier (x) [test/cases/16/source.c line 11, col 27]>
<comma (,) [test/cases/16/source.c line 11, col 28]>
<identifier (y) [test/cases/16/source.c line 11, col 30]>
<dot (.) [test/cases/16/source.c line 11, col 31]>
<identifier (b) [test/cases/16/source.c line 11, col 32]>
<rparen ()) [test/cases/16/source.c line 11, col 33]>
<semi (;) [test/cases/16/source.c line 11, col 34]>
<rbrace (}) [test/cases/16/source.c line 12, col 1]>

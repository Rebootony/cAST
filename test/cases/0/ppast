(PPFile:
  nodes=[
    (Define:
      body=(ReplacementList:
        tokens=[
          lparen,
          bitand,
          identifier,
          lsquare,
          pp_number,
          rsquare,
          rparen
        ]
      ),
      ident=identifier
    ),
    (IfSection:
      elif=[],
      else=(Else:
        nodes=[
          csource
        ]
      ),
      if=(IfDef:
        nodes=[
          csource
        ],
        ident=identifier
      )
    ),
    csource,
    (DefineFunction:
      body=(ReplacementList:
        tokens=[
          identifier,
          add,
          identifier
        ]
      ),
      ident=identifier,
      params=[
        identifier,
        identifier
      ]
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          pp_number
        ]
      ),
      ident=identifier
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          pp_number
        ]
      ),
      ident=identifier
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          string_literal
        ]
      ),
      ident=identifier
    ),
    (DefineFunction:
      body=(ReplacementList:
        tokens=[
          identifier,
          sub,
          identifier
        ]
      ),
      ident=identifier,
      params=[
        identifier,
        identifier
      ]
    ),
    csource,
    (Define:
      body=(ReplacementList:
        tokens=[
          identifier,
          lparen,
          pp_number,
          comma,
          identifier,
          rparen,
          add,
          identifier
        ]
      ),
      ident=identifier
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          identifier,
          lparen,
          pp_number,
          comma,
          pp_number,
          rparen
        ]
      ),
      ident=identifier
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          pp_number,
          add,
          identifier,
          lparen,
          pp_number,
          comma,
          pp_number,
          rparen
        ]
      ),
      ident=identifier
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          string_literal
        ]
      ),
      ident=identifier
    ),
    csource,
    (IfSection:
      elif=[],
      else=None,
      if=(If:
        expr=(Equals:
          right=pp_number,
          left=identifier
        ),
        nodes=[
          csource
        ]
      )
    ),
    csource,
    (Define:
      body=(ReplacementList:
        tokens=[
          pp_number
        ]
      ),
      ident=identifier
    ),
    (Define:
      body=(ReplacementList:
        tokens=[
          pp_number
        ]
      ),
      ident=identifier
    ),
    (IfSection:
      elif=[
        (ElseIf:
          expr=pp_number,
          nodes=None
        ),
        (ElseIf:
          expr=(Sub:
            right=pp_number,
            left=pp_number
          ),
          nodes=[
            csource
          ]
        ),
        (ElseIf:
          expr=(Sub:
            right=pp_number,
            left=pp_number
          ),
          nodes=[
            csource
          ]
        )
      ],
      else=None,
      if=(IfDef:
        nodes=[
          (IfSection:
            elif=[],
            else=None,
            if=(IfNDef:
              nodes=[
                csource
              ],
              ident=identifier
            )
          )
        ],
        ident=identifier
      )
    ),
    csource,
    (Undef:
      ident=identifier
    ),
    csource,
    (Undef:
      ident=identifier
    ),
    csource
  ]
)
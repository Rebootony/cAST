<external_declaration_hint () [test/cases/5/source.c line 5, col 1]>
<int (int) [test/cases/5/source.c line 5, col 1]>
<function_definition_hint () [test/cases/5/source.c line 5, col 1]>
<identifier (main) [test/cases/5/source.c line 5, col 5]>
<lparen (() [test/cases/5/source.c line 5, col 9]>
<rparen ()) [test/cases/5/source.c line 5, col 10]>
<lbrace ({) [test/cases/5/source.c line 6, col 1]>
<identifier (printf) [test/cases/5/source.c line 7, col 3]>
<lparen (() [test/cases/5/source.c line 7, col 9]>
<string_literal ("%d\n") [test/cases/5/source.c line 7, col 10]>
<comma (,) [test/cases/5/source.c line 7, col 16]>
<integer_constant (1000) [test/cases/5/source.c line 7, col 18]>
<add (+) [test/cases/5/source.c line 7, col 18]>
<integer_constant (2) [test/cases/5/source.c line 7, col 18]>
<add (+) [test/cases/5/source.c line 7, col 18]>
<integer_constant (1) [test/cases/5/source.c line 7, col 18]>
<rparen ()) [test/cases/5/source.c line 7, col 32]>
<semi (;) [test/cases/5/source.c line 7, col 33]>
<return (return) [test/cases/5/source.c line 8, col 3]>
<integer_constant (0) [test/cases/5/source.c line 8, col 10]>
<semi (;) [test/cases/5/source.c line 8, col 11]>
<rbrace (}) [test/cases/5/source.c line 9, col 1]>

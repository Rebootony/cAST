<external_declaration_hint () [test/cases/14/source.c line 1, col 1]>
<int (int) [test/cases/14/source.c line 1, col 1]>
<function_definition_hint () [test/cases/14/source.c line 1, col 1]>
<identifier (main) [test/cases/14/source.c line 1, col 5]>
<lparen (() [test/cases/14/source.c line 1, col 9]>
<rparen ()) [test/cases/14/source.c line 1, col 10]>
<lbrace ({) [test/cases/14/source.c line 2, col 1]>
<int (int) [test/cases/14/source.c line 3, col 3]>
<identifier (a) [test/cases/14/source.c line 3, col 7]>
<assign (=) [test/cases/14/source.c line 3, col 9]>
<integer_constant (0) [test/cases/14/source.c line 3, col 11]>
<semi (;) [test/cases/14/source.c line 3, col 12]>
<while (while) [test/cases/14/source.c line 4, col 3]>
<lparen (() [test/cases/14/source.c line 4, col 8]>
<integer_constant (1) [test/cases/14/source.c line 4, col 9]>
<rparen ()) [test/cases/14/source.c line 4, col 10]>
<lbrace ({) [test/cases/14/source.c line 4, col 12]>
<identifier (func) [test/cases/14/source.c line 5, col 5]>
<lparen (() [test/cases/14/source.c line 5, col 9]>
<rparen ()) [test/cases/14/source.c line 5, col 10]>
<semi (;) [test/cases/14/source.c line 5, col 11]>
<rbrace (}) [test/cases/14/source.c line 6, col 3]>
<do (do) [test/cases/14/source.c line 8, col 3]>
<lbrace ({) [test/cases/14/source.c line 8, col 6]>
<identifier (func) [test/cases/14/source.c line 9, col 5]>
<lparen (() [test/cases/14/source.c line 9, col 9]>
<rparen ()) [test/cases/14/source.c line 9, col 10]>
<semi (;) [test/cases/14/source.c line 9, col 11]>
<identifier (a) [test/cases/14/source.c line 10, col 5]>
<addeq (+=) [test/cases/14/source.c line 10, col 7]>
<integer_constant (1) [test/cases/14/source.c line 10, col 10]>
<semi (;) [test/cases/14/source.c line 10, col 11]>
<rbrace (}) [test/cases/14/source.c line 11, col 3]>
<while (while) [test/cases/14/source.c line 11, col 5]>
<lparen (() [test/cases/14/source.c line 11, col 10]>
<integer_constant (0) [test/cases/14/source.c line 11, col 11]>
<rparen ()) [test/cases/14/source.c line 11, col 12]>
<semi (;) [test/cases/14/source.c line 11, col 13]>
<switch (switch) [test/cases/14/source.c line 13, col 3]>
<lparen (() [test/cases/14/source.c line 13, col 9]>
<identifier (a) [test/cases/14/source.c line 13, col 10]>
<rparen ()) [test/cases/14/source.c line 13, col 11]>
<lbrace ({) [test/cases/14/source.c line 14, col 3]>
<case (case) [test/cases/14/source.c line 15, col 5]>
<integer_constant (0) [test/cases/14/source.c line 15, col 10]>
<colon (:) [test/cases/14/source.c line 15, col 11]>
<identifier (func) [test/cases/14/source.c line 16, col 7]>
<lparen (() [test/cases/14/source.c line 16, col 11]>
<rparen ()) [test/cases/14/source.c line 16, col 12]>
<semi (;) [test/cases/14/source.c line 16, col 13]>
<identifier (a) [test/cases/14/source.c line 17, col 7]>
<addeq (+=) [test/cases/14/source.c line 17, col 9]>
<integer_constant (1) [test/cases/14/source.c line 17, col 12]>
<semi (;) [test/cases/14/source.c line 17, col 13]>
<break (break) [test/cases/14/source.c line 18, col 7]>
<semi (;) [test/cases/14/source.c line 18, col 12]>
<case (case) [test/cases/14/source.c line 19, col 5]>
<integer_constant (1) [test/cases/14/source.c line 19, col 10]>
<colon (:) [test/cases/14/source.c line 19, col 11]>
<identifier (func) [test/cases/14/source.c line 20, col 7]>
<lparen (() [test/cases/14/source.c line 20, col 11]>
<rparen ()) [test/cases/14/source.c line 20, col 12]>
<semi (;) [test/cases/14/source.c line 20, col 13]>
<goto (goto) [test/cases/14/source.c line 21, col 7]>
<identifier (byebye) [test/cases/14/source.c line 21, col 12]>
<semi (;) [test/cases/14/source.c line 21, col 18]>
<break (break) [test/cases/14/source.c line 22, col 7]>
<semi (;) [test/cases/14/source.c line 22, col 12]>
<default (default) [test/cases/14/source.c line 23, col 5]>
<colon (:) [test/cases/14/source.c line 23, col 12]>
<break (break) [test/cases/14/source.c line 24, col 7]>
<semi (;) [test/cases/14/source.c line 24, col 12]>
<rbrace (}) [test/cases/14/source.c line 25, col 3]>
<label_hint () [test/cases/14/source.c line 27, col 1]>
<identifier (byebye) [test/cases/14/source.c line 27, col 1]>
<colon (:) [test/cases/14/source.c line 27, col 7]>
<identifier (printf) [test/cases/14/source.c line 28, col 3]>
<lparen (() [test/cases/14/source.c line 28, col 9]>
<string_literal ("See ya!") [test/cases/14/source.c line 28, col 10]>
<rparen ()) [test/cases/14/source.c line 28, col 19]>
<semi (;) [test/cases/14/source.c line 28, col 20]>
<return (return) [test/cases/14/source.c line 29, col 3]>
<integer_constant (0) [test/cases/14/source.c line 29, col 10]>
<semi (;) [test/cases/14/source.c line 29, col 11]>
<rbrace (}) [test/cases/14/source.c line 30, col 1]>
<external_declaration_hint () [test/cases/14/source.c line 32, col 1]>
<int (int) [test/cases/14/source.c line 32, col 1]>
<function_definition_hint () [test/cases/14/source.c line 32, col 1]>
<identifier (func) [test/cases/14/source.c line 32, col 5]>
<lparen (() [test/cases/14/source.c line 32, col 9]>
<rparen ()) [test/cases/14/source.c line 32, col 10]>
<lbrace ({) [test/cases/14/source.c line 33, col 1]>
<return (return) [test/cases/14/source.c line 34, col 3]>
<integer_constant (0) [test/cases/14/source.c line 34, col 10]>
<semi (;) [test/cases/14/source.c line 34, col 11]>
<rbrace (}) [test/cases/14/source.c line 35, col 1]>

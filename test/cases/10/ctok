<external_declaration_hint () [test/cases/10/source.c line 1, col 1]>
<int (int) [test/cases/10/source.c line 1, col 1]>
<declarator_hint () [test/cases/10/source.c line 1, col 1]>
<identifier (a) [test/cases/10/source.c line 1, col 5]>
<semi (;) [test/cases/10/source.c line 1, col 6]>
<external_declaration_hint () [test/cases/10/source.c line 2, col 1]>
<static (static) [test/cases/10/source.c line 2, col 1]>
<int (int) [test/cases/10/source.c line 2, col 8]>
<declarator_hint () [test/cases/10/source.c line 2, col 1]>
<identifier (b) [test/cases/10/source.c line 2, col 12]>
<assign (=) [test/cases/10/source.c line 2, col 14]>
<integer_constant (3) [test/cases/10/source.c line 2, col 16]>
<semi (;) [test/cases/10/source.c line 2, col 17]>
<external_declaration_hint () [test/cases/10/source.c line 3, col 1]>
<struct (struct) [test/cases/10/source.c line 3, col 1]>
<identifier (b) [test/cases/10/source.c line 3, col 8]>
<lbrace ({) [test/cases/10/source.c line 3, col 10]>
<int (int) [test/cases/10/source.c line 4, col 3]>
<asterisk (*) [test/cases/10/source.c line 4, col 7]>
<identifier (a) [test/cases/10/source.c line 4, col 8]>
<semi (;) [test/cases/10/source.c line 4, col 9]>
<int (int) [test/cases/10/source.c line 5, col 3]>
<identifier (b) [test/cases/10/source.c line 5, col 7]>
<semi (;) [test/cases/10/source.c line 5, col 8]>
<rbrace (}) [test/cases/10/source.c line 6, col 1]>
<declarator_hint () [test/cases/10/source.c line 3, col 1]>
<semi (;) [test/cases/10/source.c line 6, col 2]>
<external_declaration_hint () [test/cases/10/source.c line 7, col 1]>
<int (int) [test/cases/10/source.c line 7, col 1]>
<function_definition_hint () [test/cases/10/source.c line 7, col 1]>
<identifier (func) [test/cases/10/source.c line 7, col 5]>
<lparen (() [test/cases/10/source.c line 7, col 9]>
<named_parameter_hint () [test/cases/10/source.c line 7, col 10]>
<int (int) [test/cases/10/source.c line 7, col 10]>
<identifier (x) [test/cases/10/source.c line 7, col 14]>
<comma (,) [test/cases/10/source.c line 7, col 15]>
<named_parameter_hint () [test/cases/10/source.c line 7, col 17]>
<char (char) [test/cases/10/source.c line 7, col 17]>
<identifier (y) [test/cases/10/source.c line 7, col 22]>
<rparen ()) [test/cases/10/source.c line 7, col 23]>
<lbrace ({) [test/cases/10/source.c line 7, col 25]>
<return (return) [test/cases/10/source.c line 7, col 26]>
<identifier (x) [test/cases/10/source.c line 7, col 33]>
<add (+) [test/cases/10/source.c line 7, col 34]>
<identifier (y) [test/cases/10/source.c line 7, col 35]>
<semi (;) [test/cases/10/source.c line 7, col 36]>
<rbrace (}) [test/cases/10/source.c line 7, col 37]>
<external_declaration_hint () [test/cases/10/source.c line 8, col 1]>
<int (int) [test/cases/10/source.c line 8, col 1]>
<function_definition_hint () [test/cases/10/source.c line 8, col 1]>
<identifier (foo) [test/cases/10/source.c line 8, col 5]>
<lparen (() [test/cases/10/source.c line 8, col 8]>
<identifier (a) [test/cases/10/source.c line 8, col 9]>
<comma (,) [test/cases/10/source.c line 8, col 10]>
<identifier (b) [test/cases/10/source.c line 8, col 11]>
<rparen ()) [test/cases/10/source.c line 8, col 12]>
<char (char) [test/cases/10/source.c line 9, col 3]>
<identifier (a) [test/cases/10/source.c line 9, col 8]>
<semi (;) [test/cases/10/source.c line 9, col 9]>
<char (char) [test/cases/10/source.c line 10, col 3]>
<identifier (b) [test/cases/10/source.c line 10, col 8]>
<semi (;) [test/cases/10/source.c line 10, col 9]>
<lbrace ({) [test/cases/10/source.c line 11, col 1]>
<rbrace (}) [test/cases/10/source.c line 11, col 2]>
<external_declaration_hint () [test/cases/10/source.c line 12, col 1]>
<int (int) [test/cases/10/source.c line 12, col 1]>
<declarator_hint () [test/cases/10/source.c line 12, col 1]>
<lparen (() [test/cases/10/source.c line 12, col 5]>
<asterisk (*) [test/cases/10/source.c line 12, col 6]>
<identifier (ptr) [test/cases/10/source.c line 12, col 7]>
<rparen ()) [test/cases/10/source.c line 12, col 10]>
<lparen (() [test/cases/10/source.c line 12, col 11]>
<named_parameter_hint () [test/cases/10/source.c line 12, col 12]>
<short (short) [test/cases/10/source.c line 12, col 12]>
<identifier (a) [test/cases/10/source.c line 12, col 18]>
<comma (,) [test/cases/10/source.c line 12, col 19]>
<named_parameter_hint () [test/cases/10/source.c line 12, col 21]>
<short (short) [test/cases/10/source.c line 12, col 21]>
<identifier (b) [test/cases/10/source.c line 12, col 27]>
<comma (,) [test/cases/10/source.c line 12, col 28]>
<named_parameter_hint () [test/cases/10/source.c line 12, col 30]>
<short (short) [test/cases/10/source.c line 12, col 30]>
<identifier (c) [test/cases/10/source.c line 12, col 36]>
<rparen ()) [test/cases/10/source.c line 12, col 37]>
<semi (;) [test/cases/10/source.c line 12, col 38]>
<external_declaration_hint () [test/cases/10/source.c line 13, col 1]>
<int (int) [test/cases/10/source.c line 13, col 1]>
<function_definition_hint () [test/cases/10/source.c line 13, col 1]>
<identifier (main) [test/cases/10/source.c line 13, col 5]>
<lparen (() [test/cases/10/source.c line 13, col 9]>
<rparen ()) [test/cases/10/source.c line 13, col 10]>
<lbrace ({) [test/cases/10/source.c line 13, col 12]>
<rbrace (}) [test/cases/10/source.c line 13, col 13]>

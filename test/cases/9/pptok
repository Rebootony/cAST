csource,1,1,/* declares a function fpfi that returns a pointer to a function returning an int. The function fpfi has two parameters: a pointer to a function returning an int (with one parameter of type long int), and an int. The pointer returned by fpfi points to a function that has one int parameter and accepts zero or more additional arguments of any type. */\nint (*fpfi(int (*)(long), int))(int, ...);\n\n/* def parse_parameters(self, tokenIterator):\n *   param = []\n *   params = []\n *   hint = ABSTRACT_PARAMETER_HINT\n *   startParenLevel = self.parenLevel\n *   for token in tokenIterator:\n *     if token == lparen and next token in delcaration_specifiers:\n *       param.extend(parse_parameters(tokenIterator))\n *       continue\n *     if (token == comma) or (token == rparen and self.parenLevel == startParenLevel - 1):\n *       params.append(hint)\n *       params.extend(param)\n *       params.append(token)\n *       hint = ABSTRACT_PARAMETER_HINT\n *       if token == rparen:\n *         break\n *     if token.id == cParser.TERMINAL_IDENTIFIER:\n *       hint = NAMED_PARAMETER_HINT\n *   return params\n *\n * if funcFound and token == lparen and next token in delcaration_specifiers:\n *   // add the lparen to ztokens\n *   ztokens.extend(parse_parameters(tokenIterator))\n */\n,test/cases/9/source.c
separator,28,1,,test/cases/9/source.c

(TranslationUnit:
  external_declarations=[
    (ExternalDeclaration:
      declarations=(FunctionDefinition:
        body=[
          (Declaration:
            init_declarators=[
              (InitDeclarator:
                initializer=None,
                declarator=(Declarator:
                  direct_declarator=<identifier (y) [test/cases/12/source.c line 4, col 7]>,
                  pointer=None
                )
              )
            ],
            declaration_specifiers=[
              <int (int) [test/cases/12/source.c line 4, col 3]>
            ]
          ),
          (Assign:
            var=<identifier (y) [test/cases/12/source.c line 5, col 3]>,
            value=(FuncCall:
              params=[
                <integer_constant (6) [test/cases/12/source.c line 5, col 17]>
              ],
              name=<identifier (factorial) [test/cases/12/source.c line 5, col 7]>
            )
          ),
          (FuncCall:
            params=[
              <string_literal ("Hello Wor...) [test/cases/12/source.c line 6, col 10]>
            ],
            name=<identifier (printf) [test/cases/12/source.c line 6, col 3]>
          ),
          (FuncCall:
            params=[
              <string_literal ("6! = %d\n...) [test/cases/12/source.c line 7, col 10]>,
              <identifier (y) [test/cases/12/source.c line 7, col 23]>
            ],
            name=<identifier (printf) [test/cases/12/source.c line 7, col 3]>
          )
        ],
        declaration_list=None,
        signature=(Declarator:
          direct_declarator=(FunctionSignature:
            params=(ParameterTypeList:
              parameter_declarations=[
                (NamedParameter:
                  declaration_specifiers=[
                    <int (int) [test/cases/12/source.c line 2, col 11]>
                  ],
                  declarator=(Declarator:
                    direct_declarator=<identifier (argc) [test/cases/12/source.c line 2, col 15]>,
                    pointer=None
                  )
                ),
                (NamedParameter:
                  declaration_specifiers=[
                    <char (char) [test/cases/12/source.c line 2, col 21]>
                  ],
                  declarator=(Declarator:
                    direct_declarator=(Array:
                      name=<identifier (argv) [test/cases/12/source.c line 2, col 28]>,
                      size=None
                    ),
                    pointer=[
                      <asterisk (*) [test/cases/12/source.c line 2, col 26]>
                    ]
                  )
                )
              ],
              va_args=None
            ),
            declarator=<identifier (main) [test/cases/12/source.c line 2, col 5]>
          ),
          pointer=None
        )
      ),
      declaration_specifiers=[
        <int (int) [test/cases/12/source.c line 2, col 1]>
      ]
    ),
    (ExternalDeclaration:
      declarations=(FunctionDefinition:
        body=[
          (If:
            elseif=None,
            statement=(Return:
              expr=<integer_constant (1) [test/cases/12/source.c line 13, col 12]>
            ),
            condition=(Equals:
              right=<integer_constant (1) [test/cases/12/source.c line 12, col 13]>,
              left=<identifier (x) [test/cases/12/source.c line 12, col 8]>
            ),
            else=None
          ),
          (Return:
            expr=(Mul:
              right=(FuncCall:
                params=[
                  (Sub:
                    right=<integer_constant (1) [test/cases/12/source.c line 14, col 26]>,
                    left=<identifier (x) [test/cases/12/source.c line 14, col 24]>
                  )
                ],
                name=<identifier (factorial) [test/cases/12/source.c line 14, col 14]>
              ),
              left=<identifier (x) [test/cases/12/source.c line 14, col 10]>
            )
          )
        ],
        declaration_list=None,
        signature=(Declarator:
          direct_declarator=(FunctionSignature:
            params=(ParameterTypeList:
              parameter_declarations=[
                (NamedParameter:
                  declaration_specifiers=[
                    <int (int) [test/cases/12/source.c line 10, col 15]>
                  ],
                  declarator=(Declarator:
                    direct_declarator=<identifier (x) [test/cases/12/source.c line 10, col 19]>,
                    pointer=None
                  )
                )
              ],
              va_args=None
            ),
            declarator=<identifier (factorial) [test/cases/12/source.c line 10, col 5]>
          ),
          pointer=None
        )
      ),
      declaration_specifiers=[
        <int (int) [test/cases/12/source.c line 10, col 1]>
      ]
    )
  ]
)

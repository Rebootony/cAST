define,1,1,#define,c.c
identifier,1,9,qux0,c.c
pp_number,1,14,7,c.c
separator,1,1,,c.c
define,2,1,#define,c.c
identifier,2,9,qux,c.c
identifier,2,13,qux0,c.c
separator,2,1,,c.c
define_function,3,1,#define,c.c
identifier,3,9,foo,c.c
lparen,3,12,(,c.c
identifier,3,13,x,c.c
comma,3,14,,,c.c
identifier,3,16,y,c.c
rparen,3,17,),c.c
identifier,3,19,x,c.c
add,3,20,+,c.c
identifier,3,21,y,c.c
separator,3,1,,c.c
csource,4,1,//          s  s  |c|,c.c
separator,4,1,,c.c
define,5,1,#define,c.c
identifier,5,9,bar,c.c
identifier,5,13,foo,c.c
identifier,5,17,foo,c.c
lparen,5,20,(,c.c
pp_number,5,21,66,c.c
comma,5,23,,,c.c
pp_number,5,24,33,c.c
rparen,5,26,),c.c
identifier,5,28,foo,c.c
identifier,5,32,foo,c.c
separator,5,1,,c.c
csource,6,1,//          |---------c----------|,c.c
separator,6,1,,c.c
define,7,1,#define,c.c
identifier,7,9,baz,c.c
identifier,7,13,foo,c.c
lparen,7,16,(,c.c
pp_number,7,17,4,c.c
comma,7,18,,,c.c
pp_number,7,19,5,c.c
rparen,7,20,),c.c
separator,7,1,,c.c
csource,8,1,//              c c,c.c
separator,8,1,,c.c
define_function,9,1,#define,c.c
identifier,9,9,var,c.c
lparen,9,12,(,c.c
identifier,9,13,s,c.c
comma,9,14,,,c.c
identifier,9,16,t,c.c
comma,9,17,,,c.c
elipsis,9,19,...,c.c
rparen,9,22,),c.c
identifier,9,24,s,c.c
add,9,25,+,c.c
identifier,9,26,t,c.c
add,9,27,+,c.c
identifier,9,28,foo,c.c
lparen,9,31,(,c.c
identifier,9,32,__VA_ARGS__,c.c
rparen,9,43,),c.c
separator,9,1,,c.c
csource,10,1,// functions take ctokens as params, return ctokens.\n// replacement tokens are stored as ctokens.\n\nint main()\n{\n  printf("%d\n", 1000+7000);\n  printf("%d\n", var(1,2,qux,4));\n  printf("%d\n", bar(7,8));\n  printf("%d\n", foo(4+1,7-1));\n  return 0;\n}\n,c.c
separator,21,1,,c.c